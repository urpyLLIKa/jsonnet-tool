variables:
  # This project is hosted primarily on gitlab.com,
  # with a mirror on ops.gitlab.net
  GITLAB_INFRA_MIRROR: "ops.gitlab.net"

include:
  - local: .gitlab-ci-asdf-versions.yml

  # This template should be included in all Infrastructure projects.
  # It includes standard checks, gitlab-scanners, validations and release processes
  # common to all projects using this template library.
  # see https://gitlab.com/gitlab-com/gl-infra/common-ci-tasks/-/blob/main/README.md#templatesstandardyml
  - project: 'gitlab-com/gl-infra/common-ci-tasks'
    ref: v1.70.0  # renovate:managed
    file: templates/standard.yml

  # Runs golang standard tests, including tests, goreleaser, golangci-lint and go-mod-tidy
  # see https://gitlab.com/gitlab-com/gl-infra/common-ci-tasks/-/blob/main/templates/golang.md
  - project: 'gitlab-com/gl-infra/common-ci-tasks'
    ref: v1.70.0 # renovate:managed
    file: templates/golang.yml

stages:
  - validate
  - release
  - renovate_bot

# TODO: these tests are very poor and should be expanded upon!
test:
  stage: validate
  image: golang:${GL_ASDF_GOLANG_VERSION}
  script:
    - go build .
    - ./jsonnet-tool yaml -J examples/test_lib -H "# Test" -m ./test_out --prefix yaml_test_ examples/yaml.jsonnet
    - (find test_out/ -name "yaml_test_*" -type f | grep -q ".") || { echo "jsonnet-tool yaml test did not generate any results"; exit 1; }
    - ./jsonnet-tool render -J examples/test_lib  -H "# Test" -m ./test_out --prefix render_test_ examples/render.jsonnet
    - (find test_out/ -name "render_test_*" -type f | grep -q ".") || { echo "jsonnet-tool render test did not generate any results"; exit 1; }
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event"'
    - if: $CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH
